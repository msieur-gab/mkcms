name: Generate Content Index

on:
  push:
    branches:
      - main
    paths:
      - 'content/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Node Project
      run: |
        echo '{
          "name": "content-indexer",
          "version": "1.0.0",
          "private": true,
          "type": "commonjs"
        }' > package.json

    - name: Install dependencies
      run: npm install gray-matter

    - name: Generate Index
      run: |
        node -e "
        const fs = require('fs').promises;
        const path = require('path');
        const matter = require('gray-matter');

        async function generateIndex() {
          try {
            const contentDir = 'content';
            const files = await fs.readdir(contentDir);
            const mdFiles = files.filter(file => file.endsWith('.md'));

            const contentIndex = await Promise.all(
              mdFiles.map(async file => {
                const content = await fs.readFile(path.join(contentDir, file), 'utf-8');
                const { data, content: markdown } = matter(content);
                
                const excerpt = markdown
                  .split('\n')
                  .find(line => line.trim().length > 0)
                  ?.slice(0, 150) + '...' || '';

                return {
                  title: data.title || file.replace('.md', ''),
                  file: file,
                  date: data.date ? new Date(data.date).toISOString() : new Date().toISOString(),
                  tags: data.tags || [],
                  excerpt: excerpt
                };
              })
            );

            contentIndex.sort((a, b) => new Date(b.date) - new Date(a.date));

            await fs.writeFile(
              path.join(contentDir, 'index.json'),
              JSON.stringify(contentIndex, null, 2)
            );
          } catch (error) {
            console.error('Error:', error);
            process.exit(1);
          }
        }

        generateIndex();
        "

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Build with Jekyll
      uses: actions/jekyll-build-action@v1
      with:
        source: ./
        destination: ./_site

    - name: Ensure content directory in build
      run: |
        mkdir -p _site/content
        cp -r content/* _site/content/

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v3

    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add content/
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update content and index" && git push)
