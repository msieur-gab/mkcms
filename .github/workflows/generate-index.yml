name: Generate Content Index

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Debug Environment
      run: |
        echo "Current directory:"
        pwd
        echo "\nDirectory contents:"
        ls -la
        echo "\nGit status:"
        git status

    - name: Create Directory and Content
      run: |
        mkdir -p content
        ls -la content/
        echo "---
        title: Test Post
        date: 2024-10-29
        tags: ['test']
        ---

        This is a test post." > content/test.md
        echo "\nContent directory after creation:"
        ls -la content/
        cat content/test.md

    - name: Setup Node Project
      run: |
        echo "Creating package.json"
        echo '{
          "name": "content-indexer",
          "version": "1.0.0",
          "private": true,
          "type": "commonjs"
        }' > package.json
        cat package.json

    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install gray-matter
        echo "Node modules:"
        ls -la node_modules/

    - name: Generate Index
      run: |
        echo "const fs = require('fs').promises;
        const path = require('path');
        const matter = require('gray-matter');

        async function generateIndex() {
          try {
            console.log('Starting index generation...');
            const contentDir = 'content';
            
            console.log('Reading content directory...');
            const files = await fs.readdir(contentDir);
            console.log('Found files:', files);
            
            const mdFiles = files.filter(file => file.endsWith('.md'));
            console.log('Markdown files:', mdFiles);

            const contentIndex = await Promise.all(
              mdFiles.map(async file => {
                console.log('Processing file:', file);
                const content = await fs.readFile(path.join(contentDir, file), 'utf-8');
                console.log('File content length:', content.length);
                const { data, content: markdown } = matter(content);
                console.log('Frontmatter:', data);
                
                return {
                  title: data.title || file.replace('.md', ''),
                  file: file,
                  date: data.date ? new Date(data.date).toISOString() : new Date().toISOString(),
                  tags: data.tags || []
                };
              })
            );

            console.log('Writing index.json...');
            await fs.writeFile(
              path.join(contentDir, 'index.json'),
              JSON.stringify(contentIndex, null, 2)
            );
            
            console.log('Index generated successfully');
          } catch (error) {
            console.error('Detailed error:', error);
            console.error('Error stack:', error.stack);
            process.exit(1);
          }
        }

        generateIndex().catch(error => {
          console.error('Top level error:', error);
          process.exit(1);
        });" > generate-index.js

        echo "Running script..."
        node generate-index.js

    - name: Show Results
      if: always()
      run: |
        echo "Final content directory structure:"
        ls -la content/
        echo "\nIndex.json contents (if exists):"
        cat content/index.json || echo "index.json not found"

    - name: Commit and push changes
      if: success()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add content/index.json
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update content index" && git push)
